//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Minefield.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Minefield.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to play another game? (Y/N).
        /// </summary>
        public static string ContinuePlaying {
            get {
                return ResourceManager.GetString("ContinuePlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You’ve reached the other side!.
        /// </summary>
        public static string GameCompleted {
            get {
                return ResourceManager.GetString("GameCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Over! Zero lives remaining..
        /// </summary>
        public static string GameOver {
            get {
                return ResourceManager.GetString("GameOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Careful! You’ve lost a life..
        /// </summary>
        public static string LifeLost {
            get {
                return ResourceManager.GetString("LifeLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That move is not allowed as it would place you outside the chessboard. Try again..
        /// </summary>
        public static string MoveNotAllowed {
            get {
                return ResourceManager.GetString("MoveNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to Minefield! 
        ///
        ///Your objective is to move across a chessboard grid without losing all your lives.
        ///
        ///The chessboard is an 8 x 8 grid, consisting of columns A to H (left to right), and rows 1 to 8 (bottom to top). The bottom left-hand position is read as A1 and the top right-hand position is read as H8.
        ///
        ///You will be assigned a random initial position in the A column.
        ///
        ///Use the arrow keys to navigate to safety in any cell in the H column. You can quit any time by pressing Q.
        ///
        ///Good luck!.
        /// </summary>
        public static string WelcomeMessage {
            get {
                return ResourceManager.GetString("WelcomeMessage", resourceCulture);
            }
        }
    }
}
